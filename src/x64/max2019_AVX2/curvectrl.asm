; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24234.1 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	WinbaseIsolationAwarePrivateT_UnPgpgk
PUBLIC	IsolationAwarePrivateT_SqbjaYRiRY
PUBLIC	IsolationAwarePrivateT_SAbnPgpgk
PUBLIC	WinbaseIsolationAwarePrivateT_SpeRNgRQnPgpgk
PUBLIC	WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ
EXTRN	GUID_NULL:BYTE
;	COMDAT IsolationAwarePrivateT_SqbjaYRiRY
_BSS	SEGMENT
IsolationAwarePrivateT_SqbjaYRiRY DD 01H DUP (?)
_BSS	ENDS
;	COMDAT IsolationAwarePrivateT_SAbnPgpgk
_BSS	SEGMENT
IsolationAwarePrivateT_SAbnPgpgk DD 01H DUP (?)
_BSS	ENDS
;	COMDAT WinbaseIsolationAwarePrivateT_SpeRNgRQnPgpgk
_BSS	SEGMENT
WinbaseIsolationAwarePrivateT_SpeRNgRQnPgpgk DD 01H DUP (?)
_BSS	ENDS
;	COMDAT WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ
_BSS	SEGMENT
WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ DD 01H DUP (?)
_BSS	ENDS
;	COMDAT WinbaseIsolationAwarePrivateT_UnPgpgk
_DATA	SEGMENT
WinbaseIsolationAwarePrivateT_UnPgpgk DQ ffffffffffffffffH
_DATA	ENDS
PUBLIC	??_H@YAXPEAX_K1P6APEAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	??1BitArray@@QEAA@XZ				; BitArray::~BitArray
PUBLIC	?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z ; CurveCtrl::update
PUBLIC	?disable@CurveCtrl@@SAXPEAVICurveCtl@@@Z	; CurveCtrl::disable
PUBLIC	?init@CurveCtrl@@SAXPEAVICurveCtl@@@Z		; CurveCtrl::init
PUBLIC	??_C@_1O@OOEGIONJ@?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CG@GLBOBEC@?$AAB?$AAi?$AAt?$AAA?$AAr?$AAr?$AAa?$AAy?$AA?3?$AA?3?$AAB?$AAi?$AAt?$AAA?$AAr?$AAr?$AAa?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IK@JMJDIAL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAa?$AAu?$AAt?$AAo?$AAd?$AAe?$AAs?$AAk?$AA?2?$AA3?$AAd?$AAs?$AA?5?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CK@GAKOOCFC@?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AAc?$AAu?$AAr?$AAv?$AAe?$AA?$AA@ ; `string'
PUBLIC	__real@3f800000
PUBLIC	__real@43000000
PUBLIC	__real@43800000
EXTRN	__imp_?assert1@@YAHHPEB_W00@Z:PROC
EXTRN	__imp_?CreateBitArrayImpl@BitArray@@AEAAXH@Z:PROC
EXTRN	__imp_?SetAllImpl@BitArray@@AEAAXXZ:PROC
EXTRN	__imp_?FreeBitsImpl@BitArray@@AEAAXXZ:PROC
EXTRN	__imp_??0Interval@@QEAA@HH@Z:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	memset:PROC
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
_BSS	SEGMENT
?kInvalidId@AssetManagement@MaxSDK@@3UAssetId@12@A DB 010H DUP (?) ; MaxSDK::AssetManagement::kInvalidId
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD imagerel $LN12
	DD	imagerel $LN12+72
	DD	imagerel $unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0BitArray@@QEAA@H@Z DD imagerel $LN13
	DD	imagerel $LN13+110
	DD	imagerel $unwind$??0BitArray@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1BitArray@@QEAA@XZ DD imagerel $LN9
	DD	imagerel $LN9+31
	DD	imagerel $unwind$??1BitArray@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@BitArray@@QEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+19
	DD	imagerel $unwind$?__autoclassinit2@BitArray@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z DD imagerel $LN34
	DD	imagerel $LN34+280
	DD	imagerel $unwind$?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?disable@CurveCtrl@@SAXPEAVICurveCtl@@@Z DD imagerel $LN4
	DD	imagerel $LN4+40
	DD	imagerel $unwind$?disable@CurveCtrl@@SAXPEAVICurveCtl@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?init@CurveCtrl@@SAXPEAVICurveCtl@@@Z DD imagerel $LN6
	DD	imagerel $LN6+501
	DD	imagerel $unwind$?init@CurveCtrl@@SAXPEAVICurveCtl@@@Z
pdata	ENDS
CRT$XCU	SEGMENT
?kInvalidId$initializer$@AssetManagement@MaxSDK@@3P6AXXZEA DQ FLAT:??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ ; MaxSDK::AssetManagement::kInvalidId$initializer$
CRT$XCU	ENDS
;	COMDAT __real@43800000
CONST	SEGMENT
__real@43800000 DD 043800000r			; 256
CONST	ENDS
;	COMDAT __real@43000000
CONST	SEGMENT
__real@43000000 DD 043000000r			; 128
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT ??_C@_1CK@GAKOOCFC@?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AAc?$AAu?$AAr?$AAv?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@GAKOOCFC@?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AAc?$AAu?$AAr?$AAv?$AAe?$AA?$AA@ DB 'F'
	DB	00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, ' ', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e'
	DB	00H, ' ', 00H, 'c', 00H, 'u', 00H, 'r', 00H, 'v', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
_DATA	SEGMENT
?kTriObjNormalXTCID@@3VClass_ID@@B DD 0730a33d7H	; kTriObjNormalXTCID
	DD	027246c55H
_DATA	ENDS
;	COMDAT ??_C@_1IK@JMJDIAL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAa?$AAu?$AAt?$AAo?$AAd?$AAe?$AAs?$AAk?$AA?2?$AA3?$AAd?$AAs?$AA?5?$AAm?$AAa@
CONST	SEGMENT
??_C@_1IK@JMJDIAL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAa?$AAu?$AAt?$AAo?$AAd?$AAe?$AAs?$AAk?$AA?2?$AA3?$AAd?$AAs?$AA?5?$AAm?$AAa@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'a', 00H, 'u', 00H, 't', 00H
	DB	'o', 00H, 'd', 00H, 'e', 00H, 's', 00H, 'k', 00H, '\', 00H, '3'
	DB	00H, 'd', 00H, 's', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 'x', 00H
	DB	' ', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, ' ', 00H, 's'
	DB	00H, 'd', 00H, 'k', 00H, '\', 00H, 'm', 00H, 'a', 00H, 'x', 00H
	DB	's', 00H, 'd', 00H, 'k', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'b', 00H
	DB	'i', 00H, 't', 00H, 'a', 00H, 'r', 00H, 'r', 00H, 'a', 00H, 'y'
	DB	00H, '.', 00H, 'h', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@GLBOBEC@?$AAB?$AAi?$AAt?$AAA?$AAr?$AAr?$AAa?$AAy?$AA?3?$AA?3?$AAB?$AAi?$AAt?$AAA?$AAr?$AAr?$AAa?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@GLBOBEC@?$AAB?$AAi?$AAt?$AAA?$AAr?$AAr?$AAa?$AAy?$AA?3?$AA?3?$AAB?$AAi?$AAt?$AAA?$AAr?$AAr?$AAa?$AAy?$AA?$AA@ DB 'B'
	DB	00H, 'i', 00H, 't', 00H, 'A', 00H, 'r', 00H, 'r', 00H, 'a', 00H
	DB	'y', 00H, ':', 00H, ':', 00H, 'B', 00H, 'i', 00H, 't', 00H, 'A'
	DB	00H, 'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@OOEGIONJ@?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1O@OOEGIONJ@?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'n', 00H
	DB	' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?init@CurveCtrl@@SAXPEAVICurveCtl@@@Z DD 092819H
	DD	087819H
	DD	096814H
	DD	017340fH
	DD	014010fH
	DD	07008H
	DD	imagerel __GSHandlerCheck
	DD	078H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?disable@CurveCtrl@@SAXPEAVICurveCtl@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z DD imagerel ?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z
	DD	0ffffffffH
	DD	imagerel ?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z+93
	DD	00H
	DD	imagerel ?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z+238
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z DD 042319H
	DD	0d3414H
	DD	070027206H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z
	DD	03aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@BitArray@@QEAAX_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1BitArray@@QEAA@XZ DD imagerel ??1BitArray@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1BitArray@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1BitArray@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1BitArray@@QEAA@XZ DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1BitArray@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0BitArray@@QEAA@H@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD 081901H
	DD	086419H
	DD	075419H
	DD	063419H
	DD	070153219H
xdata	ENDS
; Function compile flags: /Ogtpy
; File g:\dropbox\github\berconmaps\src\curvectrl.cpp
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\icurvctl.h
; File g:\dropbox\github\berconmaps\src\curvectrl.cpp
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\icurvctl.h
; File g:\dropbox\github\berconmaps\src\curvectrl.cpp
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\icurvctl.h
; File g:\dropbox\github\berconmaps\src\curvectrl.cpp
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\icurvctl.h
; File g:\dropbox\github\berconmaps\src\curvectrl.cpp
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\icurvctl.h
; File g:\dropbox\github\berconmaps\src\curvectrl.cpp
;	COMDAT ?init@CurveCtrl@@SAXPEAVICurveCtl@@@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 56
pt$ = 88
__$ArrayPad$ = 120
curve$ = 176
?init@CurveCtrl@@SAXPEAVICurveCtl@@@Z PROC		; CurveCtrl::init, COMDAT

; 41   : void CurveCtrl::init(ICurveCtl *curve) {	

$LN6:
	mov	rax, rsp
	mov	QWORD PTR [rax+16], rbx
	push	rdi
	sub	rsp, 160				; 000000a0H
	vmovaps	XMMWORD PTR [rax-24], xmm6
	vmovaps	XMMWORD PTR [rax-40], xmm7
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 42   : 	curve->SetTitle(L"Function value curve");

	mov	rax, QWORD PTR [rcx]
	lea	rdx, OFFSET FLAT:??_C@_1CK@GAKOOCFC@?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AAc?$AAu?$AAr?$AAv?$AAe?$AA?$AA@
	mov	rbx, rcx
	call	QWORD PTR [rax+1472]

; 43   : 
; 44   : 	// UI
; 45   : 	DWORD flags = CC_NONE;				
; 46   : 	flags |= CC_DRAWBG;
; 47   : 	flags |= CC_DRAWGRID;
; 48   : 	flags |= CC_DRAWUTOOLBAR;
; 49   : 	flags |= 0; //CC_DRAWLTOOLBAR;
; 50   : 	flags |= CC_SHOWRESET;
; 51   : 	flags |= 0; //CC_DRAWSCROLLBARS;
; 52   : 	flags |= 0; //CC_AUTOSCROLL;
; 53   : 	flags |= CC_DRAWRULER;
; 54   : 	flags |= 0; //CC_ASPOPUP;
; 55   : 	flags |= CC_CONSTRAIN_Y;
; 56   : 	flags |= CC_HIDE_DISABLED_CURVES;
; 57   : 
; 58   : 	// RC Menu
; 59   : 	flags |= CC_RCMENU_MOVE_XY;
; 60   : 	flags |= CC_RCMENU_MOVE_X;
; 61   : 	flags |= CC_RCMENU_MOVE_Y;
; 62   : 	flags |= CC_RCMENU_SCALE;
; 63   : 	flags |= CC_RCMENU_INSERT_CORNER;
; 64   : 	flags |= CC_RCMENU_INSERT_BEZIER;
; 65   : 	flags |= CC_RCMENU_DELETE;
; 66   : 	
; 67   : 	curve->SetCCFlags(flags);

	mov	rax, QWORD PTR [rbx]
	mov	edx, 261775				; 0003fe8fH
	mov	rcx, rbx
	call	QWORD PTR [rax+1504]

; 68   : 
; 69   : 	// Range	
; 70   : 	curve->SetXRange(0.0f,1.0f);

	mov	rax, QWORD PTR [rbx]
	mov	r9d, 1
	vmovss	xmm7, DWORD PTR __real@3f800000
	vxorps	xmm6, xmm6, xmm6
	vmovaps	xmm2, xmm7
	vmovaps	xmm1, xmm6
	mov	rcx, rbx
	call	QWORD PTR [rax+1392]

; 71   : 	curve->SetYRange(0.0f,1.0f);

	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	vmovaps	xmm2, xmm7
	vmovaps	xmm1, xmm6
	call	QWORD PTR [rax+1400]

; 72   : 
; 73   : 	// Setup curve			
; 74   : 	curve->SetNumCurves(1, TRUE);

	mov	rax, QWORD PTR [rbx]
	mov	edx, 1
	mov	r8d, edx
	mov	rcx, rbx
	call	QWORD PTR [rax+1368]

; 75   : 	ICurve *pCurve = curve->GetControlCurve(0);

	mov	rax, QWORD PTR [rbx]
	xor	edx, edx
	mov	rcx, rbx
	call	QWORD PTR [rax+1480]

; 76   : 	pCurve->SetNumPts(2);

	mov	edx, 2
	mov	rcx, rax
	mov	rdi, rax
	mov	r8, QWORD PTR [rax]
	call	QWORD PTR [r8+1416]

; 77   : 	pCurve->SetPenProperty( RGB(0,0,0));

	mov	r10, QWORD PTR [rdi]
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, rdi
	call	QWORD PTR [r10+1344]

; 78   : 	pCurve->SetDisabledPenProperty( RGB(128,128,128));

	mov	r10, QWORD PTR [rdi]
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 8421504				; 00808080H
	mov	rcx, rdi
	call	QWORD PTR [r10+1360]

; 79   : 	//pCurve->SetLookupTableSize(1000);
; 80   : 	TimeValue t = 0;
; 81   : 	
; 82   : 	// Point 0
; 83   : 	CurvePoint pt = pCurve->GetPoint(t,0);

	mov	rbx, QWORD PTR [rdi]
	lea	rcx, QWORD PTR $T2[rsp]
	mov	edx, -2147483648			; ffffffff80000000H
	mov	r8d, 2147483647				; 7fffffffH
	call	QWORD PTR __imp_??0Interval@@QEAA@HH@Z
	xor	r9d, r9d
	lea	rdx, QWORD PTR pt$[rsp]
	xor	r8d, r8d
	mov	QWORD PTR [rsp+32], rax
	mov	rcx, rdi
	call	QWORD PTR [rbx+1448]

; 84   : 	pt.p.y = 0.f;			

	vmovss	DWORD PTR pt$[rsp+4], xmm6

; 85   : 	pCurve->SetPoint(t,0,&pt);

	mov	rax, QWORD PTR [rdi]
	lea	r9, QWORD PTR pt$[rsp]
	mov	DWORD PTR [rsp+40], 1
	xor	r8d, r8d
	xor	edx, edx
	mov	DWORD PTR [rsp+32], 1
	mov	rcx, rdi
	call	QWORD PTR [rax+1440]

; 86   : 	
; 87   : 	// Point 1
; 88   : 	pt = pCurve->GetPoint(t,1);

	mov	rbx, QWORD PTR [rdi]
	lea	rcx, QWORD PTR $T1[rsp]
	mov	edx, -2147483648			; ffffffff80000000H
	mov	r8d, 2147483647				; 7fffffffH
	call	QWORD PTR __imp_??0Interval@@QEAA@HH@Z
	mov	r9d, 1
	lea	rdx, QWORD PTR $T3[rsp]
	xor	r8d, r8d
	mov	QWORD PTR [rsp+32], rax
	mov	rcx, rdi
	call	QWORD PTR [rbx+1448]
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\icurvctl.h

; 417  : 		p		= rhs.p;

	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR pt$[rsp], rcx

; 418  : 		in		= rhs.in;

	mov	rcx, QWORD PTR [rax+8]
	mov	QWORD PTR pt$[rsp+8], rcx
; File g:\dropbox\github\berconmaps\src\curvectrl.cpp

; 90   : 	pCurve->SetPoint(t,1,&pt);	

	lea	r9, QWORD PTR pt$[rsp]
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\icurvctl.h

; 419  : 		out		= rhs.out;

	mov	rcx, QWORD PTR [rax+16]
; File g:\dropbox\github\berconmaps\src\curvectrl.cpp

; 90   : 	pCurve->SetPoint(t,1,&pt);	

	xor	edx, edx
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\icurvctl.h

; 419  : 		out		= rhs.out;

	mov	QWORD PTR pt$[rsp+16], rcx
; File g:\dropbox\github\berconmaps\src\curvectrl.cpp

; 90   : 	pCurve->SetPoint(t,1,&pt);	

	mov	rcx, rdi
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\icurvctl.h

; 420  : 		flags	= rhs.flags;

	mov	eax, DWORD PTR [rax+24]
; File g:\dropbox\github\berconmaps\src\curvectrl.cpp

; 89   : 	pt.p.y = 1.f;			

	vmovss	DWORD PTR pt$[rsp+4], xmm7
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\icurvctl.h

; 420  : 		flags	= rhs.flags;

	mov	DWORD PTR pt$[rsp+24], eax
; File g:\dropbox\github\berconmaps\src\curvectrl.cpp

; 90   : 	pCurve->SetPoint(t,1,&pt);	

	lea	r8d, QWORD PTR [rdx+1]
	mov	rax, QWORD PTR [rdi]
	mov	DWORD PTR [rsp+40], 1
	mov	DWORD PTR [rsp+32], 1
	call	QWORD PTR [rax+1440]

; 91   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+160]
	mov	rbx, QWORD PTR [r11+24]
	vmovaps	xmm6, XMMWORD PTR [r11-16]
	vmovaps	xmm7, XMMWORD PTR [r11-32]
	mov	rsp, r11
	pop	rdi
	ret	0
?init@CurveCtrl@@SAXPEAVICurveCtl@@@Z ENDP		; CurveCtrl::init
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File g:\dropbox\github\berconmaps\src\curvectrl.cpp
;	COMDAT ?disable@CurveCtrl@@SAXPEAVICurveCtl@@@Z
_TEXT	SEGMENT
curve$ = 48
?disable@CurveCtrl@@SAXPEAVICurveCtl@@@Z PROC		; CurveCtrl::disable, COMDAT

; 36   : void CurveCtrl::disable(ICurveCtl *curve) {

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H

; 37   : 	curve->SetActive(FALSE);

	mov	rax, QWORD PTR [rcx]
	xor	edx, edx
	mov	rbx, rcx
	call	QWORD PTR [rax+1352]

; 38   : 	curve->EnableDraw(FALSE);	

	mov	rax, QWORD PTR [rbx]
	xor	edx, edx
	mov	rcx, rbx

; 39   : }

	add	rsp, 32					; 00000020H
	pop	rbx

; 38   : 	curve->EnableDraw(FALSE);	

	rex_jmp	QWORD PTR [rax+1584]
?disable@CurveCtrl@@SAXPEAVICurveCtl@@@Z ENDP		; CurveCtrl::disable
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File g:\dropbox\github\berconmaps\src\curvectrl.cpp
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\bitarray.h
; File g:\dropbox\github\berconmaps\src\curvectrl.cpp
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\bitarray.h
; File g:\dropbox\github\berconmaps\src\curvectrl.cpp
;	COMDAT ?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z
_TEXT	SEGMENT
$T1 = 32
ba$ = 40
__$ArrayPad$ = 56
curve$ = 80
hParent$ = 88
resMaker$ = 96
?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z PROC ; CurveCtrl::update, COMDAT

; 20   : void CurveCtrl::update(ICurveCtl *curve, HWND hParent, ReferenceMaker *resMaker) {

$LN34:
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	QWORD PTR $T1[rsp], -2
	mov	QWORD PTR [rsp+104], rbx
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, r8
	mov	rdi, rcx

; 21   : 	curve->SetCustomParentWnd(hParent);

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+1520]

; 22   : #if MAX_RELEASE >= 18900
; 23   : 	curve->RegisterResourceMaker(static_cast<ReferenceTarget*>(resMaker));

	mov	rax, QWORD PTR [rdi]
	mov	rdx, rbx
	mov	rcx, rdi
	call	QWORD PTR [rax+1424]
	xor	eax, eax
	mov	QWORD PTR ba$[rsp], rax
	mov	QWORD PTR ba$[rsp+8], rax
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\bitarray.h

; 215  : 			numBits     = n;

	mov	ebx, 1
	mov	DWORD PTR ba$[rsp+8], ebx

; 216  : 			localBits   = 0;

	xor	ecx, ecx
	mov	QWORD PTR ba$[rsp], rcx

; 510  : 	inline bool UseLocalBits() const { return numBits <= kMAX_LOCALBITS; }

	mov	eax, DWORD PTR ba$[rsp+8]
	cmp	eax, 64					; 00000040H

; 277  : 		if (UseLocalBits()) 

	jg	SHORT $LN17@update

; 516  : 	{ return (i < kMAX_LOCALBITS) ? (DWORD_PTR(1) << i) : DWORD_PTR(0); }

	jge	SHORT $LN25@update
	shlx	rcx, rbx, rax
$LN25@update:

; 279  : 			localBits = BitMask(numBits) - 1;

	lea	rax, QWORD PTR [rcx-1]
	mov	QWORD PTR ba$[rsp], rax

; 280  : 		}
; 281  : 		else

	jmp	SHORT $LN18@update
$LN17@update:

; 282  : 		{
; 283  : 			SetAllImpl();

	lea	rcx, QWORD PTR ba$[rsp]
	call	QWORD PTR __imp_?SetAllImpl@BitArray@@AEAAXXZ
$LN18@update:
; File g:\dropbox\github\berconmaps\src\curvectrl.cpp

; 29   : 	curve->SetDisplayMode(ba);

	mov	rax, QWORD PTR [rdi]
	lea	rdx, QWORD PTR ba$[rsp]
	mov	rcx, rdi
	call	QWORD PTR [rax+1488]

; 30   : 	curve->EnableDraw(TRUE);

	mov	rax, QWORD PTR [rdi]
	mov	edx, ebx
	mov	rcx, rdi
	call	QWORD PTR [rax+1584]

; 31   : 	curve->SetActive(TRUE);

	mov	rax, QWORD PTR [rdi]
	mov	edx, ebx
	mov	rcx, rdi
	call	QWORD PTR [rax+1352]

; 32   : 	curve->SetZoomValues(256.f, 128.f);

	mov	rax, QWORD PTR [rdi]
	vmovss	xmm2, DWORD PTR __real@43000000
	vmovss	xmm1, DWORD PTR __real@43800000
	mov	rcx, rdi
	call	QWORD PTR [rax+1440]

; 33   : 	curve->SetScrollValues(-16, -45);

	mov	rax, QWORD PTR [rdi]
	mov	edx, -16
	lea	r8d, QWORD PTR [rdx-29]
	mov	rcx, rdi
	call	QWORD PTR [rax+1456]

; 34   : 	curve->Redraw();

	mov	rax, QWORD PTR [rdi]
	mov	rcx, rdi
	call	QWORD PTR [rax+1552]
	npad	1
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\bitarray.h

; 510  : 	inline bool UseLocalBits() const { return numBits <= kMAX_LOCALBITS; }

	cmp	DWORD PTR ba$[rsp+8], 64		; 00000040H

; 246  : 		if( !UseLocalBits() ) 

	jle	SHORT $LN27@update

; 247  : 			FreeBitsImpl(); 

	lea	rcx, QWORD PTR ba$[rsp]
	call	QWORD PTR __imp_?FreeBitsImpl@BitArray@@AEAAXXZ
$LN27@update:
; File g:\dropbox\github\berconmaps\src\curvectrl.cpp

; 35   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z ENDP ; CurveCtrl::update
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
ba$ = 40
__$ArrayPad$ = 56
curve$ = 80
hParent$ = 88
resMaker$ = 96
?dtor$0@?0??update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z@4HA PROC ; `CurveCtrl::update'::`1'::dtor$0
	lea	rcx, QWORD PTR ba$[rdx]
	jmp	??1BitArray@@QEAA@XZ			; BitArray::~BitArray
?dtor$0@?0??update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z@4HA ENDP ; `CurveCtrl::update'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
ba$ = 40
__$ArrayPad$ = 56
curve$ = 80
hParent$ = 88
resMaker$ = 96
?dtor$0@?0??update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z@4HA PROC ; `CurveCtrl::update'::`1'::dtor$0
	lea	rcx, QWORD PTR ba$[rdx]
	jmp	??1BitArray@@QEAA@XZ			; BitArray::~BitArray
?dtor$0@?0??update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z@4HA ENDP ; `CurveCtrl::update'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\icurvctl.h
;	COMDAT ??4CurvePoint@@QEAAAEAV0@AEBV0@@Z
_TEXT	SEGMENT
this$ = 8
rhs$ = 16
??4CurvePoint@@QEAAAEAV0@AEBV0@@Z PROC			; CurvePoint::operator=, COMDAT

; 417  : 		p		= rhs.p;

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax

; 418  : 		in		= rhs.in;

	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax

; 419  : 		out		= rhs.out;

	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx+16], rax

; 420  : 		flags	= rhs.flags;

	mov	eax, DWORD PTR [rdx+24]
	mov	DWORD PTR [rcx+24], eax

; 421  : 		return *this;

	mov	rax, rcx

; 422  : 	}

	ret	0
??4CurvePoint@@QEAAAEAV0@AEBV0@@Z ENDP			; CurvePoint::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@BitArray@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
classSize$ = 56
?__autoclassinit2@BitArray@@QEAAX_K@Z PROC		; BitArray::__autoclassinit2, COMDAT
$LN4:
	sub	rsp, 40					; 00000028H
	mov	r8, rdx
	xor	edx, edx
	call	memset
	add	rsp, 40					; 00000028H
	ret	0
?__autoclassinit2@BitArray@@QEAAX_K@Z ENDP		; BitArray::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\bitarray.h
;	COMDAT ?BitArrayDeallocated@BitArray@@AEAAXXZ
_TEXT	SEGMENT
this$ = 8
?BitArrayDeallocated@BitArray@@AEAAXXZ PROC		; BitArray::BitArrayDeallocated, COMDAT

; 553  : 	inline void BitArrayDeallocated() {}

	ret	0
?BitArrayDeallocated@BitArray@@AEAAXXZ ENDP		; BitArray::BitArrayDeallocated
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\bitarray.h
;	COMDAT ?BitArrayAllocated@BitArray@@AEAAXXZ
_TEXT	SEGMENT
this$ = 8
?BitArrayAllocated@BitArray@@AEAAXXZ PROC		; BitArray::BitArrayAllocated, COMDAT

; 552  : 	inline void BitArrayAllocated() {}

	ret	0
?BitArrayAllocated@BitArray@@AEAAXXZ ENDP		; BitArray::BitArrayAllocated
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\bitarray.h
;	COMDAT ?BitMask@BitArray@@AEBA_KH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?BitMask@BitArray@@AEBA_KH@Z PROC			; BitArray::BitMask, COMDAT

; 516  : 	{ return (i < kMAX_LOCALBITS) ? (DWORD_PTR(1) << i) : DWORD_PTR(0); }

	cmp	edx, 64					; 00000040H
	jge	SHORT $LN3@BitMask
	mov	eax, edx
	mov	ecx, 1
	shlx	rax, rcx, rax
	ret	0
$LN3@BitMask:
	xor	eax, eax
	ret	0
?BitMask@BitArray@@AEBA_KH@Z ENDP			; BitArray::BitMask
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\bitarray.h
;	COMDAT ?UseLocalBits@BitArray@@AEBA_NH@Z
_TEXT	SEGMENT
this$ = 8
n$ = 16
?UseLocalBits@BitArray@@AEBA_NH@Z PROC			; BitArray::UseLocalBits, COMDAT

; 511  : 	inline bool UseLocalBits(int n) const { return n <= kMAX_LOCALBITS; }

	cmp	edx, 64					; 00000040H
	setle	al
	ret	0
?UseLocalBits@BitArray@@AEBA_NH@Z ENDP			; BitArray::UseLocalBits
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\bitarray.h
;	COMDAT ?UseLocalBits@BitArray@@AEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?UseLocalBits@BitArray@@AEBA_NXZ PROC			; BitArray::UseLocalBits, COMDAT

; 510  : 	inline bool UseLocalBits() const { return numBits <= kMAX_LOCALBITS; }

	cmp	DWORD PTR [rcx+8], 64			; 00000040H
	setle	al
	ret	0
?UseLocalBits@BitArray@@AEBA_NXZ ENDP			; BitArray::UseLocalBits
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\bitarray.h
;	COMDAT ?SetAll@BitArray@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?SetAll@BitArray@@QEAAXXZ PROC				; BitArray::SetAll, COMDAT

; 510  : 	inline bool UseLocalBits() const { return numBits <= kMAX_LOCALBITS; }

	mov	eax, DWORD PTR [rcx+8]
	cmp	eax, 64					; 00000040H

; 277  : 		if (UseLocalBits()) 

	jg	SHORT $LN2@SetAll

; 516  : 	{ return (i < kMAX_LOCALBITS) ? (DWORD_PTR(1) << i) : DWORD_PTR(0); }

	jge	SHORT $LN9@SetAll
	mov	edx, 1
	shlx	rax, rdx, rax

; 278  : 		{
; 279  : 			localBits = BitMask(numBits) - 1;

	dec	rax
	mov	QWORD PTR [rcx], rax

; 284  : 		}
; 285  : 	}

	ret	0
$LN9@SetAll:

; 516  : 	{ return (i < kMAX_LOCALBITS) ? (DWORD_PTR(1) << i) : DWORD_PTR(0); }

	xor	eax, eax

; 278  : 		{
; 279  : 			localBits = BitMask(numBits) - 1;

	dec	rax
	mov	QWORD PTR [rcx], rax

; 284  : 		}
; 285  : 	}

	ret	0
$LN2@SetAll:

; 280  : 		}
; 281  : 		else
; 282  : 		{
; 283  : 			SetAllImpl();

	rex_jmp	QWORD PTR __imp_?SetAllImpl@BitArray@@AEAAXXZ
?SetAll@BitArray@@QEAAXXZ ENDP				; BitArray::SetAll
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\bitarray.h
;	COMDAT ??1BitArray@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1BitArray@@QEAA@XZ PROC				; BitArray::~BitArray, COMDAT

; 245  : 	{ 

$LN9:
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 510  : 	inline bool UseLocalBits() const { return numBits <= kMAX_LOCALBITS; }

	cmp	DWORD PTR [rcx+8], 64			; 00000040H

; 246  : 		if( !UseLocalBits() ) 

	jle	SHORT $LN2@BitArray

; 247  : 			FreeBitsImpl(); 

	call	QWORD PTR __imp_?FreeBitsImpl@BitArray@@AEAAXXZ
	npad	1
$LN2@BitArray:

; 248  : 		else 
; 249  : 			BitArrayDeallocated();
; 250  : 	}

	add	rsp, 56					; 00000038H
	ret	0
??1BitArray@@QEAA@XZ ENDP				; BitArray::~BitArray
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\bitarray.h
;	COMDAT ??0BitArray@@QEAA@H@Z
_TEXT	SEGMENT
this$ = 48
n$ = 56
??0BitArray@@QEAA@H@Z PROC				; BitArray::BitArray, COMDAT

; 206  : 	inline BitArray(int n)

$LN13:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	edi, edx
	mov	rbx, rcx

; 207  : 	{
; 208  : 		DbgAssert( n >= 0 );

	test	edx, edx
	jns	SHORT $LN6@BitArray
	lea	r9, OFFSET FLAT:??_C@_1O@OOEGIONJ@?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	mov	ecx, 208				; 000000d0H
	lea	r8, OFFSET FLAT:??_C@_1CG@GLBOBEC@?$AAB?$AAi?$AAt?$AAA?$AAr?$AAr?$AAa?$AAy?$AA?3?$AA?3?$AAB?$AAi?$AAt?$AAA?$AAr?$AAr?$AAa?$AAy?$AA?$AA@
	lea	rdx, OFFSET FLAT:??_C@_1IK@JMJDIAL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAa?$AAu?$AAt?$AAo?$AAd?$AAe?$AAs?$AAk?$AA?2?$AA3?$AAd?$AAs?$AA?5?$AAm?$AAa@
	call	QWORD PTR __imp_?assert1@@YAHHPEB_W00@Z
$LN6@BitArray:
	xor	edx, edx
	test	edi, edi
	cmovns	edx, edi

; 511  : 	inline bool UseLocalBits(int n) const { return n <= kMAX_LOCALBITS; }

	cmp	edx, 64					; 00000040H

; 209  : 		if (n < 0)
; 210  : 		{
; 211  : 			n = 0;
; 212  : 		}
; 213  : 		if( UseLocalBits(n) )

	jg	SHORT $LN3@BitArray

; 214  : 		{
; 215  : 			numBits     = n;

	mov	DWORD PTR [rbx+8], edx

; 223  : 		}
; 224  : 	}

	mov	rax, rbx
	mov	QWORD PTR [rbx], 0
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN3@BitArray:

; 216  : 			localBits   = 0;
; 217  : 
; 218  : 			BitArrayAllocated();
; 219  : 		}
; 220  : 		else
; 221  : 		{
; 222  : 			CreateBitArrayImpl(n);

	mov	rcx, rbx
	call	QWORD PTR __imp_?CreateBitArrayImpl@BitArray@@AEAAXH@Z

; 223  : 		}
; 224  : 	}

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0BitArray@@QEAA@H@Z ENDP				; BitArray::BitArray
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\assetmanagement\assetid.h
;	COMDAT ??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ
text$di	SEGMENT
??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ PROC	; MaxSDK::AssetManagement::`dynamic initializer for 'kInvalidId'', COMDAT

; 29   : 			AssetId() { *static_cast<GUID*>(this) = CLSID_NULL; }

	vmovups	xmm0, XMMWORD PTR GUID_NULL
	vmovups	XMMWORD PTR ?kInvalidId@AssetManagement@MaxSDK@@3UAssetId@12@A, xmm0

; 32   : 		static AssetId kInvalidId;

	ret	0
??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ ENDP	; MaxSDK::AssetManagement::`dynamic initializer for 'kInvalidId''
text$di	ENDS
; Function compile flags: /Ogtpy
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\assetmanagement\assetid.h
;	COMDAT ??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ PROC		; MaxSDK::AssetManagement::AssetId::AssetId, COMDAT

; 29   : 			AssetId() { *static_cast<GUID*>(this) = CLSID_NULL; }

	vmovups	xmm0, XMMWORD PTR GUID_NULL
	vmovups	XMMWORD PTR [rcx], xmm0
	mov	rax, rcx
	ret	0
??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ ENDP		; MaxSDK::AssetManagement::AssetId::AssetId
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files\autodesk\3ds max 2019 sdk\maxsdk\include\maxtypes.h
;	COMDAT ??0Class_ID@@QEAA@KK@Z
_TEXT	SEGMENT
this$ = 8
aa$ = 16
bb$ = 24
??0Class_ID@@QEAA@KK@Z PROC				; Class_ID::Class_ID, COMDAT

; 160  : 	Class_ID(ulong aa, ulong bb) { a = aa; b = bb; }

	mov	DWORD PTR [rcx], edx
	mov	rax, rcx
	mov	DWORD PTR [rcx+4], r8d
	ret	0
??0Class_ID@@QEAA@KK@Z ENDP				; Class_ID::Class_ID
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File g:\dropbox\github\berconmaps\src\curvectrl.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 8
__formal$ = 16
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

; 92   : }

	ret	0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File g:\dropbox\github\berconmaps\src\curvectrl.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 8
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

; 92   : }

	ret	0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_H@YAXPEAX_K1P6APEAX0@Z@Z
_TEXT	SEGMENT
__t$ = 48
__s$ = 56
__n$ = 64
__f$ = 72
??_H@YAXPEAX_K1P6APEAX0@Z@Z PROC			; `vector constructor iterator', COMDAT
$LN12:
	test	r8, r8
	je	SHORT $LN10@vector
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, r9
	mov	rbx, r8
	mov	rbp, rdx
	mov	rdi, rcx
$LL2@vector:
	mov	rcx, rdi
	call	rsi
	add	rdi, rbp
	sub	rbx, 1
	jne	SHORT $LL2@vector
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN10@vector:
	ret	0
??_H@YAXPEAX_K1P6APEAX0@Z@Z ENDP			; `vector constructor iterator'
_TEXT	ENDS
END
